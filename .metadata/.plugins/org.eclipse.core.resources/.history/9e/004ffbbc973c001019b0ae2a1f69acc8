package com.mysite.irms.controller;

import com.mysite.irms.entity.Envelope;
import com.mysite.irms.repository.EnvelopeRepository;
import com.mysite.irms.security.JwtTokenProvider;
import com.mysite.irms.service.EnvelopeService;

import jakarta.servlet.http.HttpServletRequest;
import lombok.RequiredArgsConstructor;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping("/api/envelopes")
@RequiredArgsConstructor
public class EnvelopeController {
	private final EnvelopeService envelopeService;
	private final EnvelopeRepository envelopeRepository;
	private final JwtTokenProvider jwtTokenProvider;

	@PostMapping("/upload")
	public ResponseEntity<?> uploadFile(@RequestParam("file") MultipartFile file, Authentication authentication) {
		try {
			String username = authentication.getName();
			envelopeService.saveEncryptedEnvelope(file, username);
			return ResponseEntity.ok("업로드 및 암호화 완료");
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("에러: " + e.getMessage());
		}
	}

	@GetMapping("/my")
	public ResponseEntity<List<Envelope>> getMyEnvelopes(HttpServletRequest request) {
		String username = extractUsernameFromRequest(request);
		List<Envelope> envelopes = envelopeRepository.findByUploaderUsername(username);
		return ResponseEntity.ok(envelopes);
	}

	private String extractUsernameFromRequest(HttpServletRequest request) {
		String token = jwtTokenProvider.resolveToken(request);
		return jwtTokenProvider.getUsername(token);
	}
}
